#server.port=8100
server.port=9000
#spring.mvc.pathmatch.matching-strategy=ant-path-matcher
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

spring.application.name=claims
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=ClaimsApp
#spring.application.name = microservice-one
#eureka.client.instance.preferIpAddress=true
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.config.import = optional:configserver:http://172.174.113.233:8888
#Zipkin changes
spring.zipkin.base-url=http://172.174.113.233:9411/
spring.sleuth.sampler.probability = 1.0
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.security.enabled = false
spring.data.elasticsearch.client.reactive.max-in-memory-size=100
#spring.profiles.active=dev

#Kafka Consumer
#spring.kafka.consumer.bootstrap-servers: localhost:9092
#Kafka Consumer Group(CG)
#spring.kafka.consumer.group-id= claim_group
#Configure Initial Offset
#spring.kafka.consumer.auto-offset-reset: earliest
#Deserializer class for message key
#spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#apache kafka does not support Json Desirializer thats why kafka Deserializer
#spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#Trust all packages for JSON serialization and deserialization
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#Kafka topic name
#spring.kafka.topic.name=customer
